{
  //vim keybindings
  "vim.easymotion": true,
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.useCtrlKeys": true,
  "vim.timeout": 350,
  // "vim.foldfix": true,
  // "vim.useSystemClipboard": true,
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-c>": false,
    "<C-v>": false,
    "<C-w>": false
  },
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "<esc>"
      ]
    }
  ],
  "vim.visualModeKeyBindings": [
    //indent to right side multiple times
    {
      "before": [
        ">"
      ],
      "after": [
        ">",
        "g",
        "v"
      ]
    },
    //outdent to left side multiple times
    {
      "before": [
        "<"
      ],
      "after": [
        "<",
        "g",
        "v"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    //format document
    {
      "before": [
        "<leader>",
        "f",
        "m"
      ],
      "commands": [
        "editor.action.formatDocument"
      ]
    },
    //yank the whole buffer
    {
      "before": [
        "<C-a>"
      ],
      "commands": [
        ":%y+"
      ]
    },
    // paste yanked text for register 0
    {
      "before": [
        "leader",
        "p"
      ],
      "after": [
        "\"",
        "0",
        "p"
      ]
    },
    //check register
    {
      "before": [
        "leader",
        "r"
      ],
      "commands": [
        ":reg"
      ]
    },
    //search items refreshed
    {
      "before": [
        "esc"
      ],
      "commands": [
        ":nohl"
      ]
    },
    //set number
    {
      "before": [
        "<leader>",
        "l",
        "n"
      ],
      "commands": [
        ":set nu"
      ]
    },
    //set relativenumber
    {
      "before": [
        "<leader>",
        "r",
        "n"
      ],
      "commands": [
        ":set rnu"
      ]
    },
    // Save file
    {
      "before": [
        "<leader>",
        "s"
      ],
      "commands": [
        ":w"
      ]
    },
    //foucs on explorer
    {
      "before": [
        "<leader>",
        "e"
      ],
      "commands": [
        "workbench.view.explorer"
      ]
    },
    //go to beginning of the line
    {
      "before": [
        "<leader>",
        "h"
      ],
      "after": [
        "_"
      ]
    },
    //go to end of the line
    {
      "before": [
        "<leader>",
        "l"
      ],
      "after": [
        "$"
      ]
    },
    //move a line down
    {
      "before": [
        "K"
      ],
      "commands": [
        "lineBreakInsert"
      ],
      "silent": true
    },
    // Move lines down by 2 instead of 1
    {
      "before": [
        "<C-e>"
      ],
      "after": [
        "2",
        "<C-e>"
      ]
    },
    // Move lines up by 2 instead of 1
    {
      "before": [
        "<C-y>"
      ],
      "after": [
        "2",
        "<C-y>"
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "p"
      ],
      "after": [
        "p",
        "g",
        "v",
        "y"
      ]
    }
  ],
  "window.zoomLevel": 0.7, //1.5
  "files.autoSave": "onFocusChange",
  "editor.lineNumbers": "on",
  "workbench.startupEditor": "none",
  "editor.fontSize": 18, //18
  "editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.fontLigatures": false,
  "editor.letterSpacing": 0.2,
  "editor.smoothScrolling": true,
  "editor.renderLineHighlight": "all",
  "explorer.compactFolders": false,
  "editor.wordWrap": "on",
  "editor.minimap.enabled": false,
  "editor.bracketPairColorization.enabled": true,
  "editor.linkedEditing": true,
  "window.menuBarVisibility": "toggle",
  "security.workspace.trust.untrustedFiles": "open",
  // "breadcrumbs.enabled": false,
  "explorer.confirmDelete": false,
  //format on save and formatter
  // "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.renderWhitespace": "none",
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  //c/c++ intellisence
  "C_Cpp.autocomplete": "disabled",
  //terminal
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  "terminal.integrated.fontSize": 17, //16
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.enablePersistentSessions": false,
  "terminal.integrated.showExitAlert": false,
  "terminal.integrated.rightClickBehavior": "copyPaste",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.shellIntegration.enabled": true,
  //code runner
  "code-runner.runInTerminal": true,
  "code-runner.saveFileBeforeRun": true,
  "code-runner.executorMap": {
    "c": "clear && cd $dir && gcc $fileName -o $fileNameWithoutExt && cd $dir$fileNameWithoutExt",
    "cpp": "cd $dir && cppcompile $fileNameWithoutExt && rm -f $fileNameWithoutExt",
    "python": "python3"
    // "javascript": "node",
  },
  "files.saveConflictResolution": "overwriteFileOnDisk",
  //workbench
  "workbench.colorCustomizations": {
    //for white theme
    // "editorCursor.foreground": "#023020",
    // "terminalCursor.foreground": "#023020",
    // "editor.background": "#EEEEEC",
    // "editor.foreground": "#2E3436"
    //for black theme
    "editorCursor.foreground": "#bbbaba",
    "terminalCursor.foreground": "#bbbaba"
  },
  "explorer.confirmDragAndDrop": false,
  "php.suggest.basic": false,
  "php.validate.enable": false,
  "emmet.excludeLanguages": [
    "markdown",
    "php"
  ],
  "workbench.iconTheme": "material-icon-theme",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.CustomBrowser": "chrome",
}
